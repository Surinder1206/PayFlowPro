@page "/debug-auth"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using PayFlowPro.Web.Shared
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Authentication Debug Page</h3>

<div class="card">
    <div class="card-body">
        <h5>Current Authentication State:</h5>

        <AuthorizeView>
            <Authorized>
                <div class="alert alert-success">
                    <h6>✅ User is AUTHENTICATED</h6>
                    <p><strong>Username:</strong> @context.User.Identity?.Name</p>
                    <p><strong>Identity Type:</strong> @context.User.Identity?.GetType().Name</p>
                    <p><strong>Is Authenticated:</strong> @context.User.Identity?.IsAuthenticated</p>

                    <h6 class="mt-3">Claims:</h6>
                    <ul>
                        @foreach (var claim in context.User.Claims)
                        {
                            <li><strong>@claim.Type:</strong> @claim.Value</li>
                        }
                    </ul>

                    <h6 class="mt-3">Roles:</h6>
                    <ul>
                        @foreach (var role in context.User.Claims.Where(c => c.Type == System.Security.Claims.ClaimTypes.Role))
                        {
                            <li>@role.Value</li>
                        }
                    </ul>

                    <div class="mt-3">
                        <h6>Test Logout Form:</h6>
                        <form method="post" action="/Account/Logout">
                            <AntiforgeryToken />
                            <button type="submit" class="btn btn-danger">
                                <i class="fas fa-sign-out-alt"></i> Test Logout
                            </button>
                        </form>
                    </div>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="alert alert-warning">
                    <h6>❌ User is NOT AUTHENTICATED</h6>
                    <p>You need to log in to see the logout option.</p>
                    <a href="/Account/Login" class="btn btn-primary">Go to Login</a>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        <div class="mt-4">
            <h6>LoginDisplay Component Test:</h6>
            <div class="border p-2 bg-dark text-light">
                <LoginDisplay />
            </div>
        </div>
    </div>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Console.WriteLine($"Debug: User authenticated: {authState.User.Identity?.IsAuthenticated}");
        Console.WriteLine($"Debug: User name: {authState.User.Identity?.Name}");
    }
}