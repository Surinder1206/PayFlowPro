@page "/self-service"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using PayFlowPro.Core.Services
@using PayFlowPro.Core.Interfaces
@using PayFlowPro.Shared.DTOs.Employee
@using PayFlowPro.Shared.DTOs.Dashboard
@using PayFlowPro.Models.DTOs.Leave
@inject IDashboardService DashboardService
@inject ILeaveManagementService LeaveService
@inject IEmployeeIdentityService EmployeeIdentityService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@attribute [Authorize(Roles = "Employee")]

<div class="container-fluid py-4">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm bg-gradient-primary text-white">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h1 class="mb-2">
                                <i class="fas fa-user-circle me-3"></i>
                                Employee Self-Service Portal
                            </h1>
                            <p class="mb-0 text-white-50">
                                Manage your personal information, track requests, and access important documents
                            </p>
                            @if (employeeDashboard != null)
                            {
                                <small class="d-block mt-2">
                                    Welcome, <strong>@employeeDashboard.UserName</strong> (@employeeDashboard.EmployeeCode) 
                                    • @employeeDashboard.JobTitle • @employeeDashboard.DepartmentName
                                </small>
                            }
                        </div>
                        <div class="col-md-4 text-end">
                            <div class="text-white">
                                <div class="fs-5 fw-bold">@DateTime.Now.ToString("dddd")</div>
                                <div>@DateTime.Now.ToString("MMMM dd, yyyy")</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="row">
            <div class="col-12 text-center py-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-3 text-muted">Loading your self-service portal...</p>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    @errorMessage
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Quick Action Cards -->
        <div class="row mb-4">
            <div class="col-12">
                <h3 class="mb-3">
                    <i class="fas fa-bolt text-warning me-2"></i>
                    Quick Actions
                </h3>
            </div>
            
            <!-- Profile Management -->
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card h-100 shadow-sm border-0 hover-card">
                    <div class="card-body text-center p-4">
                        <div class="mb-3">
                            <i class="fas fa-user-edit fa-3x text-primary"></i>
                        </div>
                        <h5 class="card-title">My Profile</h5>
                        <p class="card-text text-muted small">
                            Update personal information, contact details, and emergency contacts
                        </p>
                        <a href="/Account/Manage" class="btn btn-primary btn-sm stretched-link">
                            <i class="fas fa-arrow-right me-1"></i>
                            Manage Profile
                        </a>
                    </div>
                </div>
            </div>

            <!-- Leave Management -->
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card h-100 shadow-sm border-0 hover-card">
                    <div class="card-body text-center p-4">
                        <div class="mb-3">
                            <i class="fas fa-calendar-check fa-3x text-success"></i>
                        </div>
                        <h5 class="card-title">My Leave</h5>
                        <p class="card-text text-muted small">
                            View leave balance, submit requests, and track leave history
                        </p>
                        <a href="/self-service/leave" class="btn btn-success btn-sm stretched-link">
                            <i class="fas fa-arrow-right me-1"></i>
                            Manage Leave
                        </a>
                    </div>
                </div>
            </div>

            <!-- Payslips -->
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card h-100 shadow-sm border-0 hover-card">
                    <div class="card-body text-center p-4">
                        <div class="mb-3">
                            <i class="fas fa-receipt fa-3x text-info"></i>
                        </div>
                        <h5 class="card-title">My Payslips</h5>
                        <p class="card-text text-muted small">
                            Access current and historical payslips, download copies
                        </p>
                        <a href="/payslips/my" class="btn btn-info btn-sm stretched-link">
                            <i class="fas fa-arrow-right me-1"></i>
                            View Payslips
                        </a>
                    </div>
                </div>
            </div>

            <!-- Documents -->
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card h-100 shadow-sm border-0 hover-card">
                    <div class="card-body text-center p-4">
                        <div class="mb-3">
                            <i class="fas fa-folder-open fa-3x text-warning"></i>
                        </div>
                        <h5 class="card-title">My Documents</h5>
                        <p class="card-text text-muted small">
                            Upload and manage personal documents and certificates
                        </p>
                        <a href="/self-service/documents" class="btn btn-warning btn-sm stretched-link">
                            <i class="fas fa-arrow-right me-1"></i>
                            Manage Documents
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Status Overview -->
        <div class="row mb-4">
            <div class="col-12">
                <h3 class="mb-3">
                    <i class="fas fa-chart-pie text-info me-2"></i>
                    My Status Overview
                </h3>
            </div>
            
            <div class="col-lg-4 mb-3">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-light">
                        <h6 class="mb-0">
                            <i class="fas fa-calendar-alt me-2"></i>
                            Leave Status
                        </h6>
                    </div>
                    <div class="card-body">
                        @if (leaveSummary != null)
                        {
                            <div class="row text-center">
                                <div class="col-4">
                                    <div class="border-end">
                                        <div class="fs-4 fw-bold text-success">@leaveSummary.TotalAvailable.ToString("F1")</div>
                                        <small class="text-muted">Available</small>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="border-end">
                                        <div class="fs-4 fw-bold text-info">@leaveSummary.TotalUsed.ToString("F1")</div>
                                        <small class="text-muted">Used</small>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="fs-4 fw-bold text-warning">@leaveSummary.TotalPending.ToString("F1")</div>
                                    <small class="text-muted">Pending</small>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="text-center text-muted">
                                <i class="fas fa-spinner fa-spin me-2"></i>
                                Loading leave data...
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-4 mb-3">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-light">
                        <h6 class="mb-0">
                            <i class="fas fa-tasks me-2"></i>
                            Request Status
                        </h6>
                    </div>
                    <div class="card-body">
                        @if (recentLeaveRequests != null)
                        {
                            var pendingCount = recentLeaveRequests.Count(r => r.Status == "Pending");
                            var approvedThisMonth = recentLeaveRequests.Count(r => r.Status == "Approved" && r.SubmittedAt.Month == DateTime.Now.Month);
                            var totalRequests = recentLeaveRequests.Count();
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="small">Pending Requests</span>
                                <span class="badge bg-warning">@pendingCount</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="small">Approved This Month</span>
                                <span class="badge bg-success">@approvedThisMonth</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="small">Total Requests</span>
                                <span class="badge bg-info">@totalRequests</span>
                            </div>
                        }
                        else
                        {
                            <div class="text-center text-muted">
                                <i class="fas fa-spinner fa-spin me-2"></i>
                                Loading request data...
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-4 mb-3">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-light">
                        <h6 class="mb-0">
                            <i class="fas fa-user-check me-2"></i>
                            Profile Completion
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="progress mb-2" style="height: 8px;">
                            <div class="progress-bar bg-success" role="progressbar" style="width: 85%"></div>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">85% Complete</small>
                            <a href="/profile" class="btn btn-sm btn-outline-primary">
                                Complete Profile
                            </a>
                        </div>
                        <div class="mt-2">
                            <small class="text-muted">
                                <i class="fas fa-info-circle me-1"></i>
                                Add emergency contacts to reach 100%
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="row">
            <div class="col-lg-6 mb-4">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-light">
                        <h6 class="mb-0">
                            <i class="fas fa-history me-2"></i>
                            Recent Activity
                        </h6>
                    </div>
                    <div class="card-body">
                        @if (employeeDashboard?.RecentActivities?.Any() == true)
                        {
                            <div class="timeline">
                                @foreach (var activity in employeeDashboard.RecentActivities.Take(5))
                                {
                                    <div class="timeline-item">
                                        <div class="timeline-marker bg-info"></div>
                                        <div class="timeline-content">
                                            <h6 class="mb-1">@activity</h6>
                                            <small class="text-muted">Recent activity</small>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else if (recentLeaveRequests?.Any() == true)
                        {
                            <div class="timeline">
                                @foreach (var request in recentLeaveRequests.Take(3))
                                {
                                    <div class="timeline-item">
                                        <div class="timeline-marker bg-@GetStatusColor(request.Status)"></div>
                                        <div class="timeline-content">
                                            <h6 class="mb-1">Leave Request @request.Status</h6>
                                            <p class="text-muted small mb-1">@request.LeaveTypeName: @request.StartDate.ToString("MMM dd") - @request.EndDate.ToString("MMM dd")</p>
                                            <small class="text-muted">@GetTimeAgo(request.SubmittedAt)</small>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center text-muted py-3">
                                <i class="fas fa-history me-2"></i>
                                No recent activity to display
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-6 mb-4">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-light">
                        <h6 class="mb-0">
                            <i class="fas fa-bell me-2"></i>
                            Important Notices
                        </h6>
                    </div>
                    <div class="card-body">
                        @if (leaveSummary?.LeaveTypeBalances?.Any() == true)
                        {
                            var expiringLeave = leaveSummary.LeaveTypeBalances
                                .Where(lb => lb.AvailableDays > 0 && lb.LeaveTypeName.Contains("Annual"))
                                .FirstOrDefault();
                            
                            if (expiringLeave != null && expiringLeave.AvailableDays > 0)
                            {
                                <div class="alert alert-info alert-sm">
                                    <div class="d-flex">
                                        <i class="fas fa-info-circle me-3 mt-1"></i>
                                        <div>
                                            <strong>Leave Balance Reminder</strong>
                                            <p class="mb-0 small">You have @expiringLeave.AvailableDays.ToString("F1") @expiringLeave.LeaveTypeName days available. Plan your leave accordingly.</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        
                        @if (leaveSummary?.TotalPending > 0)
                        {
                            <div class="alert alert-warning alert-sm">
                                <div class="d-flex">
                                    <i class="fas fa-clock me-3 mt-1"></i>
                                    <div>
                                        <strong>Pending Leave Requests</strong>
                                        <p class="mb-0 small">You have @leaveSummary.TotalPending.ToString("F1") days of leave requests pending approval.</p>
                                    </div>
                                </div>
                            </div>
                        }
                        
                        @if (employeeDashboard?.NextPayDate != null)
                        {
                            var daysUntilPayday = (employeeDashboard.NextPayDate.Value - DateTime.Now).Days;
                            if (daysUntilPayday <= 7 && daysUntilPayday > 0)
                            {
                                <div class="alert alert-success alert-sm">
                                    <div class="d-flex">
                                        <i class="fas fa-money-bill-wave me-3 mt-1"></i>
                                        <div>
                                            <strong>Upcoming Payday</strong>
                                            <p class="mb-0 small">Your next payslip will be available on @employeeDashboard.NextPayDate.Value.ToString("MMM dd, yyyy") (@daysUntilPayday days).</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        
                        @if (!((leaveSummary?.LeaveTypeBalances?.Any() == true && leaveSummary.LeaveTypeBalances.Any(lb => lb.AvailableDays > 0)) || 
                               leaveSummary?.TotalPending > 0 || 
                               (employeeDashboard?.NextPayDate != null && (employeeDashboard.NextPayDate.Value - DateTime.Now).Days <= 7)))
                        {
                            <div class="alert alert-success alert-sm">
                                <div class="d-flex">
                                    <i class="fas fa-check-circle me-3 mt-1"></i>
                                    <div>
                                        <strong>All Up to Date</strong>
                                        <p class="mb-0 small">No important notices at this time. Your profile and requests are current.</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .hover-card {
        transition: transform 0.2s ease-in-out;
        cursor: pointer;
    }
    
    .hover-card:hover {
        transform: translateY(-2px);
    }

    .timeline {
        position: relative;
        padding-left: 30px;
    }

    .timeline::before {
        content: '';
        position: absolute;
        left: 10px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #e9ecef;
    }

    .timeline-item {
        position: relative;
        padding-bottom: 20px;
    }

    .timeline-marker {
        position: absolute;
        left: -25px;
        top: 5px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        border: 2px solid #fff;
    }

    .timeline-content h6 {
        font-size: 14px;
        margin-bottom: 4px;
    }

    .alert-sm {
        padding: 8px 12px;
        margin-bottom: 8px;
    }

    .alert-sm:last-child {
        margin-bottom: 0;
    }
</style>

@code {
    private EmployeeDashboardDto? employeeDashboard;
    private LeaveSummaryDto? leaveSummary;
    private List<LeaveRequestDto>? recentLeaveRequests;
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        try
        {
            isLoading = true;
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            if (authState?.User?.Identity?.IsAuthenticated == true)
            {
                var userId = authState.User.FindFirst("sub")?.Value ?? 
                           authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
                
                if (!string.IsNullOrEmpty(userId))
                {
                    employeeDashboard = await DashboardService.GetEmployeeDashboardAsync(userId);
                    
                    // Get employee ID from the user
                    var currentEmployeeId = await EmployeeIdentityService.GetEmployeeIdAsync(userId);
                    if (currentEmployeeId.HasValue)
                    {
                        var summaryResult = await LeaveService.GetEmployeeLeaveSummaryAsync(currentEmployeeId.Value);
                        if (summaryResult.IsSuccess)
                        {
                            leaveSummary = summaryResult.Data;
                        }
                        
                        var requestsResult = await LeaveService.GetEmployeeLeaveRequestsAsync(currentEmployeeId.Value);
                        if (requestsResult.IsSuccess)
                        {
                            recentLeaveRequests = requestsResult.Data;
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load dashboard data: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private string GetStatusColor(string status)
    {
        return status?.ToLower() switch
        {
            "approved" => "success",
            "rejected" => "danger",
            "pending" => "warning",
            _ => "secondary"
        };
    }

    private string GetTimeAgo(DateTime dateTime)
    {
        var timeSpan = DateTime.Now - dateTime;
        
        if (timeSpan.Days > 0)
            return $"{timeSpan.Days} day{(timeSpan.Days > 1 ? "s" : "")} ago";
        else if (timeSpan.Hours > 0)
            return $"{timeSpan.Hours} hour{(timeSpan.Hours > 1 ? "s" : "")} ago";
        else if (timeSpan.Minutes > 0)
            return $"{timeSpan.Minutes} minute{(timeSpan.Minutes > 1 ? "s" : "")} ago";
        else
            return "Just now";
    }
}