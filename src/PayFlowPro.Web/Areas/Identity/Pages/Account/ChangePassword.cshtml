@page "/Account/ChangePassword"
@model PayFlowPro.Web.Areas.Identity.Pages.Account.ChangePasswordModel
@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card shadow">
            <div class="card-header">
                <h3 class="mb-0">
                    <i class="fas fa-lock"></i> @ViewData["Title"]
                </h3>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.StatusMessage))
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @Model.StatusMessage
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                
                <form id="change-password-form" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                    
                    <div class="mb-3">
                        <label asp-for="Input.OldPassword" class="form-label"></label>
                        <div class="input-group">
                            <input asp-for="Input.OldPassword" class="form-control" type="password" />
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePasswordVisibility('Input_OldPassword', this)">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <span asp-validation-for="Input.OldPassword" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Input.NewPassword" class="form-label"></label>
                        <div class="input-group">
                            <input asp-for="Input.NewPassword" class="form-control" type="password" />
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePasswordVisibility('Input_NewPassword', this)">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <span asp-validation-for="Input.NewPassword" class="text-danger"></span>
                        <div class="form-text">
                            Password must be at least 6 characters long and contain an uppercase letter and a digit.
                        </div>
                    </div>
                    
                    <div class="mb-4">
                        <label asp-for="Input.ConfirmPassword" class="form-label"></label>
                        <div class="input-group">
                            <input asp-for="Input.ConfirmPassword" class="form-control" type="password" />
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePasswordVisibility('Input_ConfirmPassword', this)">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                    </div>
                    
                    <div class="d-grid gap-2 d-md-flex justify-content-md-between">
                        <a asp-page="./Manage" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left"></i> Back to Profile
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Change Password
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        function togglePasswordVisibility(inputId, button) {
            const input = document.getElementById(inputId);
            const icon = button.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }
        
        // Add password strength indicator
        document.addEventListener('DOMContentLoaded', function() {
            const newPasswordInput = document.getElementById('Input_NewPassword');
            
            if (newPasswordInput) {
                newPasswordInput.addEventListener('input', function() {
                    const password = this.value;
                    const strengthBar = document.getElementById('password-strength-bar');
                    
                    if (!strengthBar) {
                        // Create strength indicator
                        const strengthContainer = document.createElement('div');
                        strengthContainer.className = 'mt-2';
                        strengthContainer.innerHTML = `
                            <div class="progress" style="height: 5px;">
                                <div id="password-strength-bar" class="progress-bar" role="progressbar" style="width: 0%"></div>
                            </div>
                            <small id="password-strength-text" class="text-muted">Password strength</small>
                        `;
                        this.parentElement.parentElement.appendChild(strengthContainer);
                    }
                    
                    const strength = calculatePasswordStrength(password);
                    updatePasswordStrength(strength);
                });
            }
        });
        
        function calculatePasswordStrength(password) {
            let score = 0;
            
            if (password.length >= 6) score += 1;
            if (password.length >= 10) score += 1;
            if (/[a-z]/.test(password)) score += 1;
            if (/[A-Z]/.test(password)) score += 1;
            if (/[0-9]/.test(password)) score += 1;
            if (/[^A-Za-z0-9]/.test(password)) score += 1;
            
            return score;
        }
        
        function updatePasswordStrength(score) {
            const strengthBar = document.getElementById('password-strength-bar');
            const strengthText = document.getElementById('password-strength-text');
            
            if (!strengthBar || !strengthText) return;
            
            const colors = ['danger', 'danger', 'warning', 'warning', 'info', 'success'];
            const texts = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong', 'Very Strong'];
            const widths = [16, 32, 48, 64, 80, 100];
            
            const index = Math.min(score, 5);
            
            strengthBar.className = `progress-bar bg-${colors[index]}`;
            strengthBar.style.width = `${widths[index]}%`;
            strengthText.textContent = `Password strength: ${texts[index]}`;
            strengthText.className = `text-${colors[index]}`;
        }
    </script>
}